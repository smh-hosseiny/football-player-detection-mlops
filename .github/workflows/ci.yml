# .github/workflows/ci.yml
name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  PYTHON_VERSION: '3.9'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Cache pip packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt', 'requirements-dev.txt') }}
      - name: Install dependencies
        run: pip install flake8 black isort mypy
      - name: Run linting
        run: |
          flake8 src/ api/ --max-line-length=100
          black --check src/ api/
          isort --check-only src/ api/

  test:
    name: Run Tests and Linters
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name of: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt # Install linters, pytest, etc.

      - name: Install Package in Editable Mode
        run: pip install -e .  # This installs your project

      - name: Run Linters
        run: |
          black --check .
          flake8 .

      - name: Run Tests with Pytest
        run: pytest tests/ -v --cov=src --cov=api --cov-report=xml


  model-test:
    runs-on: ubuntu-latest
    needs: lint # Runs in parallel with 'test' job
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      # âœ¨ ADDED caching for efficiency
      - name: Cache pip packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Download test model
        run: |
          wget https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8n.pt
          mkdir -p models
          mv yolov8n.pt models/test_model.pt
      - name: Test model inference and API endpoints
        run: |
          # Test model inference
          python -c "
          from ultralytics import YOLO
          import numpy as np
          model = YOLO('models/test_model.pt')
          dummy_image = np.random.randint(0, 255, (640, 640, 3), dtype=np.uint8)
          results = model(dummy_image)
          assert len(results) > 0, 'No results from model'
          print('Model inference test passed')
          "
          # Test API endpoints
          uvicorn api.main:app --host 0.0.0.0 --port 8000 &
          sleep 10
          curl -f http://localhost:8000/health
          pkill -f uvicorn

  build-docker:
    runs-on: ubuntu-latest
    needs: [test, model-test] # Depends on both tests passing
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 # Updated to v3
      - name: Build Docker image for validation
        uses: docker/build-push-action@v5 # Updated to v5
        with:
          context: .
          file: docker/Dockerfile.inference
          tags: object-detector:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # 'push: false' is correct for a CI pipeline.
          # We are just verifying that the image builds successfully.
          push: false